// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: chat_service.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConversationType int32

const (
	ConversationType_PRIVATE ConversationType = 0
	ConversationType_GROUP   ConversationType = 1
)

// Enum value maps for ConversationType.
var (
	ConversationType_name = map[int32]string{
		0: "PRIVATE",
		1: "GROUP",
	}
	ConversationType_value = map[string]int32{
		"PRIVATE": 0,
		"GROUP":   1,
	}
)

func (x ConversationType) Enum() *ConversationType {
	p := new(ConversationType)
	*p = x
	return p
}

func (x ConversationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConversationType) Descriptor() protoreflect.EnumDescriptor {
	return file_chat_service_proto_enumTypes[0].Descriptor()
}

func (ConversationType) Type() protoreflect.EnumType {
	return &file_chat_service_proto_enumTypes[0]
}

func (x ConversationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConversationType.Descriptor instead.
func (ConversationType) EnumDescriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{0}
}

type ChatMessage struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ConversationId string                 `protobuf:"bytes,2,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	FromUserId     string                 `protobuf:"bytes,3,opt,name=from_user_id,json=fromUserId,proto3" json:"from_user_id,omitempty"`
	Content        string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	SentTime       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=sent_time,json=sentTime,proto3" json:"sent_time,omitempty"`
	CreateTime     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ChatMessage) Reset() {
	*x = ChatMessage{}
	mi := &file_chat_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage) ProtoMessage() {}

func (x *ChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{0}
}

func (x *ChatMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChatMessage) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *ChatMessage) GetFromUserId() string {
	if x != nil {
		return x.FromUserId
	}
	return ""
}

func (x *ChatMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ChatMessage) GetSentTime() *timestamppb.Timestamp {
	if x != nil {
		return x.SentTime
	}
	return nil
}

func (x *ChatMessage) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

type CreateChatMessageAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CorrelationId string                 `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateChatMessageAck) Reset() {
	*x = CreateChatMessageAck{}
	mi := &file_chat_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateChatMessageAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChatMessageAck) ProtoMessage() {}

func (x *CreateChatMessageAck) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChatMessageAck.ProtoReflect.Descriptor instead.
func (*CreateChatMessageAck) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateChatMessageAck) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

type FindConversationRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ConversationId    string                 `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	MessagePageNumber int32                  `protobuf:"varint,2,opt,name=message_page_number,json=messagePageNumber,proto3" json:"message_page_number,omitempty"`
	MessagePageSize   int32                  `protobuf:"varint,3,opt,name=message_page_size,json=messagePageSize,proto3" json:"message_page_size,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *FindConversationRequest) Reset() {
	*x = FindConversationRequest{}
	mi := &file_chat_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindConversationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindConversationRequest) ProtoMessage() {}

func (x *FindConversationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindConversationRequest.ProtoReflect.Descriptor instead.
func (*FindConversationRequest) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{2}
}

func (x *FindConversationRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *FindConversationRequest) GetMessagePageNumber() int32 {
	if x != nil {
		return x.MessagePageNumber
	}
	return 0
}

func (x *FindConversationRequest) GetMessagePageSize() int32 {
	if x != nil {
		return x.MessagePageSize
	}
	return 0
}

type CreateConversationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OwnerId       *string                `protobuf:"bytes,1,opt,name=owner_id,json=ownerId,proto3,oneof" json:"owner_id,omitempty"`
	Name          *string                `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Type          ConversationType       `protobuf:"varint,3,opt,name=type,proto3,enum=backend.chat_service.ConversationType" json:"type,omitempty"`
	MemberIds     []string               `protobuf:"bytes,4,rep,name=member_ids,json=memberIds,proto3" json:"member_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateConversationRequest) Reset() {
	*x = CreateConversationRequest{}
	mi := &file_chat_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateConversationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConversationRequest) ProtoMessage() {}

func (x *CreateConversationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConversationRequest.ProtoReflect.Descriptor instead.
func (*CreateConversationRequest) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{3}
}

func (x *CreateConversationRequest) GetOwnerId() string {
	if x != nil && x.OwnerId != nil {
		return *x.OwnerId
	}
	return ""
}

func (x *CreateConversationRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CreateConversationRequest) GetType() ConversationType {
	if x != nil {
		return x.Type
	}
	return ConversationType_PRIVATE
}

func (x *CreateConversationRequest) GetMemberIds() []string {
	if x != nil {
		return x.MemberIds
	}
	return nil
}

type CreateChatMessageRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConversationId string                 `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	FromUserId     string                 `protobuf:"bytes,2,opt,name=from_user_id,json=fromUserId,proto3" json:"from_user_id,omitempty"`
	Content        string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateChatMessageRequest) Reset() {
	*x = CreateChatMessageRequest{}
	mi := &file_chat_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateChatMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChatMessageRequest) ProtoMessage() {}

func (x *CreateChatMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChatMessageRequest.ProtoReflect.Descriptor instead.
func (*CreateChatMessageRequest) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{4}
}

func (x *CreateChatMessageRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *CreateChatMessageRequest) GetFromUserId() string {
	if x != nil {
		return x.FromUserId
	}
	return ""
}

func (x *CreateChatMessageRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type GetChatMessagesRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConversationId string                 `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	Before         *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=before,proto3,oneof" json:"before,omitempty"`
	After          *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=after,proto3,oneof" json:"after,omitempty"`
	Limit          int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetChatMessagesRequest) Reset() {
	*x = GetChatMessagesRequest{}
	mi := &file_chat_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChatMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatMessagesRequest) ProtoMessage() {}

func (x *GetChatMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatMessagesRequest.ProtoReflect.Descriptor instead.
func (*GetChatMessagesRequest) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetChatMessagesRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *GetChatMessagesRequest) GetBefore() *timestamppb.Timestamp {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *GetChatMessagesRequest) GetAfter() *timestamppb.Timestamp {
	if x != nil {
		return x.After
	}
	return nil
}

func (x *GetChatMessagesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type SearchChatMessagesRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConversationId *string                `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3,oneof" json:"conversation_id,omitempty"`
	Term           string                 `protobuf:"bytes,2,opt,name=term,proto3" json:"term,omitempty"`
	Before         *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=before,proto3,oneof" json:"before,omitempty"`
	After          *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=after,proto3,oneof" json:"after,omitempty"`
	Limit          int32                  `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SearchChatMessagesRequest) Reset() {
	*x = SearchChatMessagesRequest{}
	mi := &file_chat_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchChatMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchChatMessagesRequest) ProtoMessage() {}

func (x *SearchChatMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchChatMessagesRequest.ProtoReflect.Descriptor instead.
func (*SearchChatMessagesRequest) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{6}
}

func (x *SearchChatMessagesRequest) GetConversationId() string {
	if x != nil && x.ConversationId != nil {
		return *x.ConversationId
	}
	return ""
}

func (x *SearchChatMessagesRequest) GetTerm() string {
	if x != nil {
		return x.Term
	}
	return ""
}

func (x *SearchChatMessagesRequest) GetBefore() *timestamppb.Timestamp {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *SearchChatMessagesRequest) GetAfter() *timestamppb.Timestamp {
	if x != nil {
		return x.After
	}
	return nil
}

func (x *SearchChatMessagesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ChatMessages struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Messages      []*ChatMessage         `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatMessages) Reset() {
	*x = ChatMessages{}
	mi := &file_chat_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatMessages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessages) ProtoMessage() {}

func (x *ChatMessages) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessages.ProtoReflect.Descriptor instead.
func (*ChatMessages) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{7}
}

func (x *ChatMessages) GetMessages() []*ChatMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

type Conversation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type          ConversationType       `protobuf:"varint,2,opt,name=type,proto3,enum=backend.chat_service.ConversationType" json:"type,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	MemberIds     []string               `protobuf:"bytes,4,rep,name=member_ids,json=memberIds,proto3" json:"member_ids,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Conversation) Reset() {
	*x = Conversation{}
	mi := &file_chat_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Conversation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conversation) ProtoMessage() {}

func (x *Conversation) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conversation.ProtoReflect.Descriptor instead.
func (*Conversation) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{8}
}

func (x *Conversation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Conversation) GetType() ConversationType {
	if x != nil {
		return x.Type
	}
	return ConversationType_PRIVATE
}

func (x *Conversation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Conversation) GetMemberIds() []string {
	if x != nil {
		return x.MemberIds
	}
	return nil
}

func (x *Conversation) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type SearchConversationsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Type          *ConversationType      `protobuf:"varint,2,opt,name=type,proto3,enum=backend.chat_service.ConversationType,oneof" json:"type,omitempty"`
	Term          string                 `protobuf:"bytes,3,opt,name=term,proto3" json:"term,omitempty"`
	PageNumber    int32                  `protobuf:"varint,4,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize      int32                  `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchConversationsRequest) Reset() {
	*x = SearchConversationsRequest{}
	mi := &file_chat_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchConversationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchConversationsRequest) ProtoMessage() {}

func (x *SearchConversationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchConversationsRequest.ProtoReflect.Descriptor instead.
func (*SearchConversationsRequest) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{9}
}

func (x *SearchConversationsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SearchConversationsRequest) GetType() ConversationType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ConversationType_PRIVATE
}

func (x *SearchConversationsRequest) GetTerm() string {
	if x != nil {
		return x.Term
	}
	return ""
}

func (x *SearchConversationsRequest) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *SearchConversationsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type Conversations struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Conversations []*Conversation        `protobuf:"bytes,1,rep,name=conversations,proto3" json:"conversations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Conversations) Reset() {
	*x = Conversations{}
	mi := &file_chat_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Conversations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conversations) ProtoMessage() {}

func (x *Conversations) ProtoReflect() protoreflect.Message {
	mi := &file_chat_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conversations.ProtoReflect.Descriptor instead.
func (*Conversations) Descriptor() ([]byte, []int) {
	return file_chat_service_proto_rawDescGZIP(), []int{10}
}

func (x *Conversations) GetConversations() []*Conversation {
	if x != nil {
		return x.Conversations
	}
	return nil
}

var File_chat_service_proto protoreflect.FileDescriptor

const file_chat_service_proto_rawDesc = "" +
	"\n" +
	"\x12chat_service.proto\x12\x14backend.chat_service\x1a\x1fgoogle/protobuf/timestamp.proto\"\xf8\x01\n" +
	"\vChatMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12'\n" +
	"\x0fconversation_id\x18\x02 \x01(\tR\x0econversationId\x12 \n" +
	"\ffrom_user_id\x18\x03 \x01(\tR\n" +
	"fromUserId\x12\x18\n" +
	"\acontent\x18\x04 \x01(\tR\acontent\x127\n" +
	"\tsent_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\bsentTime\x12;\n" +
	"\vcreate_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"createTime\"=\n" +
	"\x14CreateChatMessageAck\x12%\n" +
	"\x0ecorrelation_id\x18\x01 \x01(\tR\rcorrelationId\"\x9e\x01\n" +
	"\x17FindConversationRequest\x12'\n" +
	"\x0fconversation_id\x18\x01 \x01(\tR\x0econversationId\x12.\n" +
	"\x13message_page_number\x18\x02 \x01(\x05R\x11messagePageNumber\x12*\n" +
	"\x11message_page_size\x18\x03 \x01(\x05R\x0fmessagePageSize\"\xc5\x01\n" +
	"\x19CreateConversationRequest\x12\x1e\n" +
	"\bowner_id\x18\x01 \x01(\tH\x00R\aownerId\x88\x01\x01\x12\x17\n" +
	"\x04name\x18\x02 \x01(\tH\x01R\x04name\x88\x01\x01\x12:\n" +
	"\x04type\x18\x03 \x01(\x0e2&.backend.chat_service.ConversationTypeR\x04type\x12\x1d\n" +
	"\n" +
	"member_ids\x18\x04 \x03(\tR\tmemberIdsB\v\n" +
	"\t_owner_idB\a\n" +
	"\x05_name\"\x7f\n" +
	"\x18CreateChatMessageRequest\x12'\n" +
	"\x0fconversation_id\x18\x01 \x01(\tR\x0econversationId\x12 \n" +
	"\ffrom_user_id\x18\x02 \x01(\tR\n" +
	"fromUserId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\"\xdc\x01\n" +
	"\x16GetChatMessagesRequest\x12'\n" +
	"\x0fconversation_id\x18\x01 \x01(\tR\x0econversationId\x127\n" +
	"\x06before\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampH\x00R\x06before\x88\x01\x01\x125\n" +
	"\x05after\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampH\x01R\x05after\x88\x01\x01\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limitB\t\n" +
	"\a_beforeB\b\n" +
	"\x06_after\"\x8c\x02\n" +
	"\x19SearchChatMessagesRequest\x12,\n" +
	"\x0fconversation_id\x18\x01 \x01(\tH\x00R\x0econversationId\x88\x01\x01\x12\x12\n" +
	"\x04term\x18\x02 \x01(\tR\x04term\x127\n" +
	"\x06before\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampH\x01R\x06before\x88\x01\x01\x125\n" +
	"\x05after\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampH\x02R\x05after\x88\x01\x01\x12\x14\n" +
	"\x05limit\x18\x05 \x01(\x05R\x05limitB\x12\n" +
	"\x10_conversation_idB\t\n" +
	"\a_beforeB\b\n" +
	"\x06_after\"M\n" +
	"\fChatMessages\x12=\n" +
	"\bmessages\x18\x01 \x03(\v2!.backend.chat_service.ChatMessageR\bmessages\"\xc8\x01\n" +
	"\fConversation\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12:\n" +
	"\x04type\x18\x02 \x01(\x0e2&.backend.chat_service.ConversationTypeR\x04type\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"member_ids\x18\x04 \x03(\tR\tmemberIds\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"\xd1\x01\n" +
	"\x1aSearchConversationsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12?\n" +
	"\x04type\x18\x02 \x01(\x0e2&.backend.chat_service.ConversationTypeH\x00R\x04type\x88\x01\x01\x12\x12\n" +
	"\x04term\x18\x03 \x01(\tR\x04term\x12\x1f\n" +
	"\vpage_number\x18\x04 \x01(\x05R\n" +
	"pageNumber\x12\x1b\n" +
	"\tpage_size\x18\x05 \x01(\x05R\bpageSizeB\a\n" +
	"\x05_type\"Y\n" +
	"\rConversations\x12H\n" +
	"\rconversations\x18\x01 \x03(\v2\".backend.chat_service.ConversationR\rconversations**\n" +
	"\x10ConversationType\x12\v\n" +
	"\aPRIVATE\x10\x00\x12\t\n" +
	"\x05GROUP\x10\x012\x9a\x05\n" +
	"\vChatService\x12k\n" +
	"\x12CreateConversation\x12/.backend.chat_service.CreateConversationRequest\x1a\".backend.chat_service.Conversation\"\x00\x12g\n" +
	"\x10FindConversation\x12-.backend.chat_service.FindConversationRequest\x1a\".backend.chat_service.Conversation\"\x00\x12n\n" +
	"\x13SearchConversations\x120.backend.chat_service.SearchConversationsRequest\x1a#.backend.chat_service.Conversations\"\x00\x12q\n" +
	"\x11CreateChatMessage\x12..backend.chat_service.CreateChatMessageRequest\x1a*.backend.chat_service.CreateChatMessageAck\"\x00\x12e\n" +
	"\x0fGetChatMessages\x12,.backend.chat_service.GetChatMessagesRequest\x1a\".backend.chat_service.ChatMessages\"\x00\x12k\n" +
	"\x12SearchChatMessages\x12/.backend.chat_service.SearchChatMessagesRequest\x1a\".backend.chat_service.ChatMessages\"\x00B,Z*github.com/TripConnect/chat_service;protosb\x06proto3"

var (
	file_chat_service_proto_rawDescOnce sync.Once
	file_chat_service_proto_rawDescData []byte
)

func file_chat_service_proto_rawDescGZIP() []byte {
	file_chat_service_proto_rawDescOnce.Do(func() {
		file_chat_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chat_service_proto_rawDesc), len(file_chat_service_proto_rawDesc)))
	})
	return file_chat_service_proto_rawDescData
}

var file_chat_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_chat_service_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_chat_service_proto_goTypes = []any{
	(ConversationType)(0),              // 0: backend.chat_service.ConversationType
	(*ChatMessage)(nil),                // 1: backend.chat_service.ChatMessage
	(*CreateChatMessageAck)(nil),       // 2: backend.chat_service.CreateChatMessageAck
	(*FindConversationRequest)(nil),    // 3: backend.chat_service.FindConversationRequest
	(*CreateConversationRequest)(nil),  // 4: backend.chat_service.CreateConversationRequest
	(*CreateChatMessageRequest)(nil),   // 5: backend.chat_service.CreateChatMessageRequest
	(*GetChatMessagesRequest)(nil),     // 6: backend.chat_service.GetChatMessagesRequest
	(*SearchChatMessagesRequest)(nil),  // 7: backend.chat_service.SearchChatMessagesRequest
	(*ChatMessages)(nil),               // 8: backend.chat_service.ChatMessages
	(*Conversation)(nil),               // 9: backend.chat_service.Conversation
	(*SearchConversationsRequest)(nil), // 10: backend.chat_service.SearchConversationsRequest
	(*Conversations)(nil),              // 11: backend.chat_service.Conversations
	(*timestamppb.Timestamp)(nil),      // 12: google.protobuf.Timestamp
}
var file_chat_service_proto_depIdxs = []int32{
	12, // 0: backend.chat_service.ChatMessage.sent_time:type_name -> google.protobuf.Timestamp
	12, // 1: backend.chat_service.ChatMessage.create_time:type_name -> google.protobuf.Timestamp
	0,  // 2: backend.chat_service.CreateConversationRequest.type:type_name -> backend.chat_service.ConversationType
	12, // 3: backend.chat_service.GetChatMessagesRequest.before:type_name -> google.protobuf.Timestamp
	12, // 4: backend.chat_service.GetChatMessagesRequest.after:type_name -> google.protobuf.Timestamp
	12, // 5: backend.chat_service.SearchChatMessagesRequest.before:type_name -> google.protobuf.Timestamp
	12, // 6: backend.chat_service.SearchChatMessagesRequest.after:type_name -> google.protobuf.Timestamp
	1,  // 7: backend.chat_service.ChatMessages.messages:type_name -> backend.chat_service.ChatMessage
	0,  // 8: backend.chat_service.Conversation.type:type_name -> backend.chat_service.ConversationType
	12, // 9: backend.chat_service.Conversation.created_at:type_name -> google.protobuf.Timestamp
	0,  // 10: backend.chat_service.SearchConversationsRequest.type:type_name -> backend.chat_service.ConversationType
	9,  // 11: backend.chat_service.Conversations.conversations:type_name -> backend.chat_service.Conversation
	4,  // 12: backend.chat_service.ChatService.CreateConversation:input_type -> backend.chat_service.CreateConversationRequest
	3,  // 13: backend.chat_service.ChatService.FindConversation:input_type -> backend.chat_service.FindConversationRequest
	10, // 14: backend.chat_service.ChatService.SearchConversations:input_type -> backend.chat_service.SearchConversationsRequest
	5,  // 15: backend.chat_service.ChatService.CreateChatMessage:input_type -> backend.chat_service.CreateChatMessageRequest
	6,  // 16: backend.chat_service.ChatService.GetChatMessages:input_type -> backend.chat_service.GetChatMessagesRequest
	7,  // 17: backend.chat_service.ChatService.SearchChatMessages:input_type -> backend.chat_service.SearchChatMessagesRequest
	9,  // 18: backend.chat_service.ChatService.CreateConversation:output_type -> backend.chat_service.Conversation
	9,  // 19: backend.chat_service.ChatService.FindConversation:output_type -> backend.chat_service.Conversation
	11, // 20: backend.chat_service.ChatService.SearchConversations:output_type -> backend.chat_service.Conversations
	2,  // 21: backend.chat_service.ChatService.CreateChatMessage:output_type -> backend.chat_service.CreateChatMessageAck
	8,  // 22: backend.chat_service.ChatService.GetChatMessages:output_type -> backend.chat_service.ChatMessages
	8,  // 23: backend.chat_service.ChatService.SearchChatMessages:output_type -> backend.chat_service.ChatMessages
	18, // [18:24] is the sub-list for method output_type
	12, // [12:18] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_chat_service_proto_init() }
func file_chat_service_proto_init() {
	if File_chat_service_proto != nil {
		return
	}
	file_chat_service_proto_msgTypes[3].OneofWrappers = []any{}
	file_chat_service_proto_msgTypes[5].OneofWrappers = []any{}
	file_chat_service_proto_msgTypes[6].OneofWrappers = []any{}
	file_chat_service_proto_msgTypes[9].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chat_service_proto_rawDesc), len(file_chat_service_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chat_service_proto_goTypes,
		DependencyIndexes: file_chat_service_proto_depIdxs,
		EnumInfos:         file_chat_service_proto_enumTypes,
		MessageInfos:      file_chat_service_proto_msgTypes,
	}.Build()
	File_chat_service_proto = out.File
	file_chat_service_proto_goTypes = nil
	file_chat_service_proto_depIdxs = nil
}
